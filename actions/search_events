#! /usr/bin/ruby

session_id = get_session_id_from_cookies()
request_input = TomEnv::get('MESSAGE')
request_input.strip!
request_input = JSON.parse(request_input)
current_event_title = request_input['title']
last_evaluated_key = request_input['last_evaluated_key']
last_evaluated_key = nil if last_evaluated_key.to_s.strip == ''

search_events = []
exponential_backoff do
  dynamodb = Aws::DynamoDB::Client.new(region: TomEnv::get('AWS_REGION'))

  search_events_params = {
    table_name: 'Events',
    index_name: "title-google_id-index",
    key_condition_expression: "#t = :title",
    expression_attribute_names: { "#t" => "title" },
    limit: 10,
    exclusive_start_key: last_evaluated_key,
    expression_attribute_values: { ":title" => current_event_title }
  }

  query_result = dynamodb.query(search_events_params)
  search_events = (query_result&.items || [])
  if query_result.last_evaluated_key != last_evaluated_key
    last_evaluated_key = query_result.last_evaluated_key
  else
    last_evaluated_key = nil
  end
end

is_reminder_set_hash = generate_is_reminder_set_hash(session_id['google_id'],search_events)
search_events.each do |event|
  event['is_reminder_set'] = true if is_reminder_set_hash["#{event['google_id']}-#{event['title']}"]
end

result = { events: search_events, last_evaluated_key: last_evaluated_key }

result_to_json = result.to_json.freeze
return "Content-type: application/json\n\n#{result_to_json}"
