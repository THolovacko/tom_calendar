#! /usr/bin/ruby

require_relative '../lib/tom_calendar.rb'
require "google/apis/calendar_v3"

result = { deleted_calendar: false }

cookie_session_id = ENV['HTTP_COOKIE']&.split(';')&.find{ |cookie| cookie.match?('session_id') }&.sub('session_id=','')&.strip
cookie_session_id = nil if cookie_session_id == ''

unless cookie_session_id
  print "Content-type: text/html\n\nerror: no session id cookie"
  return
end

request_ip_hash       = Digest::SHA256.hexdigest "#{ENV['SESSION_HASH_LEFT_PADDING']}#{ENV['REMOTE_ADDR']}#{ENV['SESSION_HASH_RIGHT_PADDING']}"
session_id            = JSON.parse(cookie_session_id)
dynamodb              = Aws::DynamoDB::Client.new(region: ENV['AWS_REGION'])
google_id             = get_google_id(request_ip_hash, session_id, dynamodb)
google_authorizer     = get_google_authorizer(dynamodb)
service               = Google::Apis::CalendarV3::CalendarService.new
service.authorization = google_authorizer.get_credentials(google_id)
service.client_options.application_name = 'TomCalendar'.freeze

# get google calendar id
begin
  params = {
    table_name: 'GoogleCalendarIDs',
    key: { google_id: google_id }
  }

  result_item = dynamodb.get_item(params)&.item || {}
  google_calendar_id = result_item['google_calendar_id']
rescue Exception => e
  print "Content-type: text/html\n\n#{e.message}"
  return
end

# delete google calendar if exists
if google_calendar_id
  service.delete_calendar(google_calendar_id)

  params = {
    table_name: 'GoogleCalendarIDs',
    key: { google_id: google_id }
  }

  begin
    dynamodb.delete_item(params)
  rescue
    print "Content-type: text/html\n\nUnable to delete google calendar id"
    return
  end

  result[:deleted_calendar] = true
end

print "Content-type: application/json\n\n#{result.to_json}"
