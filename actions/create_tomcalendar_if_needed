#! /usr/bin/ruby

require_relative '../lib/tom_calendar.rb'
require "google/apis/calendar_v3"

# @test: make sure calendar and event timezones are correct when creating and synching events

result = { needed_to_create: false }

cookie_session_id = ENV['HTTP_COOKIE']&.split(';')&.find{ |cookie| cookie.match?('session_id') }&.sub('session_id=','')&.strip
cookie_session_id = nil if cookie_session_id == ''

unless cookie_session_id
  print "Content-type: text/html\n\nerror: no session id cookie"
  return
end

session_id        = JSON.parse(cookie_session_id)
dynamodb          = Aws::DynamoDB::Client.new(region: ENV['AWS_REGION'])
google_id         = session_id['google_id']
google_authorizer = get_google_authorizer(dynamodb)

google_calendar_service               = Google::Apis::CalendarV3::CalendarService.new
google_calendar_service.authorization = google_authorizer.get_credentials(google_id)
google_calendar_service.client_options.application_name = 'TomCalendar'.freeze

# get google calendar id
begin
  params = {
    table_name: 'GoogleCalendarIDs',
    key: { google_id: google_id }
  }

  result_item = dynamodb.get_item(params)&.item || {}
  google_calendar_id = result_item['google_calendar_id']
rescue Exception => e
  print "Content-type: text/html\n\n#{e.message}"
  return
end

# confirm google calendar exists
google_calendar = nil
if google_calendar_id
  begin
    google_calendar = google_calendar_service.get_calendar(google_calendar_id)
  rescue Google::Apis::ClientError => e # handles 404 (missing calendar) error
    google_calendar = nil
  rescue Exception => e
    print "Content-type: text/html\n\nGoogle Server or Authorization Error"
    return
  end
end

# create google calendar if missing
unless google_calendar
  google_calendar = Google::Apis::CalendarV3::Calendar.new(summary: 'TomCalendar')
  google_calendar = google_calendar_service.insert_calendar(google_calendar)

  params = {
    table_name: 'GoogleCalendarIDs',
    item: { google_id: google_id, google_calendar_id: google_calendar.id }
  }

  begin
    dynamodb.put_item(params)
  rescue
    google_calendar_service.delete_calendar(google_calendar.id)
    print "Content-type: text/html\n\nUnable to add google calendar id"
    return
  end

  result[:needed_to_create] = true
end

print "Content-type: application/json\n\n#{result.to_json}"
