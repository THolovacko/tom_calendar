#! /usr/bin/ruby

require_relative '../lib/tom_calendar.rb'

# @test: might have a bug somewhere that is logging sessions out


cookie_session_id = ENV['HTTP_COOKIE']&.split(';')&.find{ |cookie| cookie.match?('session_id') }&.sub('session_id=','')&.strip
cookie_session_id = nil if cookie_session_id == ''

unless cookie_session_id
  print StatusCodeStr::BAD_REQUEST
  return
end

session_id = JSON.parse(cookie_session_id)
dynamodb   = Aws::DynamoDB::Client.new(region: ENV['AWS_REGION'])
result     = { deactivation_code: nil, sessions: [], current_session_index: nil }

deactivation_code_thread = Thread.new {
  code = ''
  5.times { code << rand(9).to_s }

  deactivation_code_params = {
    table_name: 'DeactivationCodes',
    item: { google_id: session_id['google_id'], code: code, created_at: Time.now.to_s, attempts_made: 0 }
  }

  dynamodb.put_item(deactivation_code_params)
  result[:deactivation_code] = code
}

sessions_params = {
    table_name: 'Sessions',
    key_condition_expression: "#gid = :google_id",
    expression_attribute_names: {
        "#gid" => "google_id"
    },
    expression_attribute_values: {
        ":google_id" => session_id['google_id']
    }
}

begin
  session_index = 0
  query_result = dynamodb.query(sessions_params)
  query_result.items.each do |session|
    result[:current_session_index] = session_index if session['device_id'] == session_id['device_id']
    result[:sessions].push({
      device_type: session['user_agent'].match(/\((?<device>\w+)/)[:device],
      last_active: calculate_time_passed_in_words(Time.parse(session['last_updated'])),
      device_id:   session['device_id']
    })
    session_index = session_index + 1
  end
rescue Aws::DynamoDB::Errors::ServiceError => error
  print StatusCodeStr::BAD_REQUEST
end


deactivation_code_thread.join
print "Content-type: application/json\n\n#{result.to_json}"
