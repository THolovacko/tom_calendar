#! /usr/bin/ruby

event = $background_task_params[:event]
event_id = "#{event['google_id']}-#{event['title']}"

exponential_backoff do
  dynamodb = Aws::DynamoDB::Client.new(region: ENV['AWS_REGION'])

  reminders_params = {
    table_name: 'EventReminders',
    index_name: "event_id-last_updated_timestamp-index",
    key_condition_expression: "#eid = :event_id",
    expression_attribute_names: { "#eid" => "event_id" },
    expression_attribute_values: { ":event_id" => event_id },
    limit: 500
  }
  check_for_reminders = true
  
  # get all event reminders with given event_id
  while check_for_reminders
    query_result = dynamodb.query(reminders_params)
    query_result.items.each do |reminder|
      # delete each google calendar event and reminder
      subscriber_google_id = reminder['subscriber_id']
      subscriber_google_calendar_id = ( dynamodb.get_item({ table_name: 'GoogleCalendarIDs', key: { google_id: subscriber_google_id } })&.item || {} )['google_calendar_id']
      delete_google_calendar_events([event],subscriber_google_calendar_id,subscriber_google_id) if subscriber_google_calendar_id && subscriber_google_id
      dynamodb.delete_item({ table_name: 'EventReminders', key: {subscriber_id: subscriber_google_id, event_id: event_id} }) if subscriber_google_calendar_id && subscriber_google_id
    end
    check_for_reminders = false unless query_result.items.size > 0
  end
end
