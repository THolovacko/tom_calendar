#! /usr/bin/ruby

require_relative '../tom_calendar.rb'
require 'socket'
require 'thread'


class TomRequest
  attr_accessor :message, :remote_host, :remote_port

  def initialize(message, remote_host, remote_port)
    @message       = message
    @remote_host   = remote_host
    @remote_port   = remote_port
  end
end

def worker_thread_work(worker_queue,socket)
  while true do
    request = worker_queue.pop()
    request_message = request.message
    request_remote_host = request.remote_host
    request_remote_port = request.remote_port

    signature = request_message.slice(0,request_message.index('signature'))
    request_message.sub!("#{signature}signature",'')

    environment_variables = request_message.slice(0,request_message.index('EOENV')).split("\n")
    request_message.sub!("EOENV",'')
    tom_env = {}
    environment_variables.each do |env_var|
      key_value = env_var.split('=',2)
      tom_env[key_value[0]] = key_value[1]
    end

    script_path = "#{tom_env['ROOT_DIR_PATH']}/actions#{tom_env['REQUEST_URI'].sub("?#{tom_env['QUERY_STRING']}",'')}".freeze

    response = exec_ruby_vm_code("#{script_path}.rvmbin").freeze
    #response = "#{signature}:Content-type: text/plain\nStatus: 200 OK\n\n#{script_path}".freeze

    socket.send(response, 0, request_remote_host, request_remote_port)
  end
end


# main thread work
if ARGV.length != 1
  puts "tomcalendar_app_server port_number".freeze
  return
end

host = '127.0.0.1'.freeze
port = ARGV[0].to_i
socket = UDPSocket.new
socket.bind(host, port)
worker_queue = Queue.new
worker_threads = []
3.times { |index| worker_threads << Thread.new {worker_thread_work(worker_queue,socket)} }

while true do
  message, addr = socket.recvfrom(65535)
  remote_host = addr[3]
  remote_port = addr[1]
  worker_queue << TomRequest.new(message,remote_host,remote_port)
end
