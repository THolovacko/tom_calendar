#! /usr/bin/ruby

require_relative '../tomcalendar.rb'
require 'socket'
require 'thread'

class TomRequest
  attr_accessor :message, :remote_host, :remote_port

  def initialize(message, remote_host, remote_port)
    @message       = message
    @remote_host   = remote_host
    @remote_port   = remote_port
  end
end

def worker_thread_work(worker_queue,socket)
  while true do
    request = worker_queue.pop()
    request_message = request.message
    request_remote_host = request.remote_host
    request_remote_port = request.remote_port
    TomEnv::init_thread()

    signature = request_message.slice(0,request_message.index('signature'))
    request_message.sub!("#{signature}signature",'')

    environment_variables = request_message.slice!(0,request_message.index('EOENV')).split("\n")
    request_message.sub!("EOENV",'')
    environment_variables.each do |env_var|
      key_value = env_var.split('=',2)
      TomEnv::set(key_value[0], key_value[1])
    end
    TomEnv::set('MESSAGE', request_message)

    script_path = "#{TomEnv::get('ROOT_DIR_PATH')}/actions#{TomEnv::get('REQUEST_URI').sub("?#{TomEnv::get('QUERY_STRING')}",'')}".freeze

    script_response = exec_ruby_vm_code("#{script_path}.rvmbin").freeze
    response = "#{signature}:#{script_response}".freeze

    socket.send(response, 0, request_remote_host, request_remote_port)
  end
end


if ARGV.length != 1
  puts "tomcalendar_app_server port_number".freeze
  return
end

host = '127.0.0.1'.freeze
port = ARGV[0].to_i
socket = UDPSocket.new
socket.bind(host, port)
worker_queue = Queue.new
worker_threads = []
3.times { |index| worker_threads << Thread.new {worker_thread_work(worker_queue,socket)} }

while true do
  message, addr = socket.recvfrom(65535)
  remote_host = addr[3]
  remote_port = addr[1]
  worker_queue << TomRequest.new(message,remote_host,remote_port)
end
